#!/bin/bash

# Deploys manifests from k8s/ directory to sminnee-prod namespace
# Requires that kubectl is authenticated

APP=sminnee-www

IMAGE=registry.sminn.ee/tangerine/$APP
TAGPREFIX=""

NAMESPACE=sminnee-prod
DEPLOYMENT=www

if [ "$1" = "" ]; then
    echo "Usage: $0 (tag)"
    exit 1
fi

if [ "$LINODE_DEPLOY_KEY" = "" ]; then
  echo "Set LINODE_DEPLOY_KEY env var to the OpenSSL private key Kubernetes access"
  exit 2
fi

IMAGE_FULL="$IMAGE:$TAGPREFIX$1"

echo "$LINODE_DEPLOY_KEY" > bin/github-deploy.key

# Apply all common manifests
KUBECONFIG=bin/kubeconfig.yaml kubectl apply -f k8s/common/ -n $NAMESPACE

# Apply environment-specific manifests (ingress, etc.)
KUBECONFIG=bin/kubeconfig.yaml kubectl apply -f k8s/prod/ -n $NAMESPACE

# Update the image tag
KUBECONFIG=bin/kubeconfig.yaml kubectl set image deployment/$DEPLOYMENT -n $NAMESPACE "www=$IMAGE_FULL"

# Wait for rollout to complete
KUBECONFIG=bin/kubeconfig.yaml kubectl rollout status deployment/$DEPLOYMENT -n $NAMESPACE --timeout=60s

if [ "$?" != "0" ]; then
  echo "Rolling back"
  KUBECONFIG=bin/kubeconfig.yaml kubectl rollout undo deployment/$DEPLOYMENT -n $NAMESPACE
  rm bin/github-deploy.key
  exit 1
fi

rm bin/github-deploy.key
